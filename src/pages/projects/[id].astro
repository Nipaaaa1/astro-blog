---
import { type CollectionEntry, getCollection, render } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import BackToPrev from "@components/BackToPrev.astro";
import Link from "@components/Link.astro";
import ArticleContent from "@components/ArticleContent.astro";
import ArticleInfo from "@components/ArticleInfo.astro";
import PageTitle from "@components/PageTitle.astro";

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return projects.map((project) => ({
    params: { id: project.id },
    props: project,
  }));
}
type Props = CollectionEntry<"projects">;

const project = Astro.props;
const { Content } = await render(project);
---

<PageLayout
  title={project.data.title}
  description={project.data.description}
  image={project.data.thumbnailUrl}
>
  <Container>
    <BackToPrev href="/projects" label="Back to Projects" />
    <div class="flex flex-col gap-1 my-10">
      <div class="flex gap-2">
        <ArticleInfo date={project.data.date} body={project.body as string} />
        |
        {
          (project.data.demoURL || project.data.repoURL) && (
            <nav class="animate flex gap-1">
              {project.data.demoURL && (
                <Link href={project.data.demoURL} external>
                  demo
                </Link>
              )}
              {project.data.demoURL && project.data.repoURL && <span>/</span>}
              {project.data.repoURL && (
                <Link href={project.data.repoURL} external>
                  repo
                </Link>
              )}
            </nav>
          )
        }
      </div>
      <PageTitle label={project.data.title} />
    </div>
    <ArticleContent thumbnailSrc={project.data.thumbnailUrl}>
      <Content />
    </ArticleContent>
  </Container>
</PageLayout>
