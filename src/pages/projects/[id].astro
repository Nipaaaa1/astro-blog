---
import { type CollectionEntry, getCollection, render } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import Link from "@components/Link.astro";
import ArticleContent from "@components/ArticleContent.astro"

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter(post => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return projects.map((project) => ({
    params: { id: project.id },
    props: project,
  }));
}
type Props = CollectionEntry<"projects">;

const project = Astro.props;
const { Content } = await render(project);
---

<PageLayout title={project.data.title} description={project.data.description} image={project.data.thumbnailUrl}>
  <Container>
    <div class="animate">
      <BackToPrev href="/projects">
        Back to projects
      </BackToPrev>
    </div>
    <div class="flex flex-col gap-1 my-10">
      <div class="flex gap-2">
        <div class="animate flex items-center gap-1.5">
          <div class="font-base text-sm">
            <FormattedDate date={project.data.date} />
          </div>
          &bull;
          <div class="font-base text-sm">
            {readingTime(project.body as string)}
          </div>
        </div>
        |
        {(project.data.demoURL || project.data.repoURL) && (
          <nav class="animate flex gap-1">
            {project.data.demoURL && (
              <Link href={project.data.demoURL} external>
                demo
              </Link>
            )}
            {project.data.demoURL && project.data.repoURL && (
              <span>/</span>
            )}
            {project.data.repoURL && (
              <Link href={project.data.repoURL} external>
                repo
              </Link>
            )}
          </nav>
          )}
        </div>
      <h1 class="animate text-6xl font-title leading-[0.8] text-neutral-black dark:text-neutral-white">
        {project.data.title}
      </h1>
    </div>
    <ArticleContent thumbnailSrc={project.data.thumbnailUrl}>
      <Content />
    </ArticleContent>
  </Container>
</PageLayout>
